{"uid":"bb6c608d43f611a9","name":"test_import_datas_from_csv","fullName":"Test.test_cases.TestConduit#test_import_datas_from_csv","historyId":"20674153b3e0fbe4786d48f5c8459d55","time":{"start":1681639812765,"stop":1681639824617,"duration":11852},"status":"broken","statusMessage":"NameError: name 'title2' is not defined","statusTrace":"self = <test_cases.TestConduit object at 0x7fcf48519420>\n\n    def test_import_datas_from_csv(self):\n        self.login()\n    \n        datas_file = 'datas.csv'\n        datas_path = os.path.join(os.path.dirname(__file__), datas_file)\n    \n        datas_list = []\n        with open(datas_path, 'r') as file:\n            reader = csv.reader(file)\n            next(reader)\n            for row in reader:\n                title, about, article, tag = row\n                datas_list.append((title, about, article, tag))\n                time.sleep(2)\n                new_article_button = self.browser.find_element(By.XPATH, '//a[@href=\"#/editor\"]')\n                new_article_button.click()\n    \n                WebDriverWait(self.browser, 10).until(\n                    EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Article Title\"]'))\n                )\n    \n                title_input = self.browser.find_element(By.XPATH, '//input[@placeholder=\"Article Title\"]')\n                title_input.send_keys(title)\n    \n                about_input = self.browser.find_element(By.XPATH, '//input[@placeholder=\"What\\'s this article about?\"]')\n                about_input.send_keys(about)\n    \n                article_input = self.browser.find_element(By.XPATH,\n                                                          '//textarea[@placeholder=\"Write your article (in markdown)\"]')\n                article_input.send_keys(article)\n    \n                tag_input = self.browser.find_element(By.XPATH, '//input[@placeholder=\"Enter tags\"]')\n                tag_input.send_keys(tag)\n                tag_input.send_keys(Keys.RETURN)\n    \n                publish_button = self.browser.find_element(By.XPATH, '//button[contains(text(), \"Publish Article\")]')\n                publish_button.click()\n    \n                article_title = WebDriverWait(self.browser, 10).until(\n                    EC.presence_of_element_located((By.XPATH, '//h1'))\n                )\n    \n                assert article_title.text == title\n    \n        datas_str = \"\\n\".join(\n            [f\"Title: {title}, About: {about}, Article: {article}, Tag: {tag}\" for (title, about, article, tag) in\n             datas_list])\n    \n        allure.attach(f\"\\nElső adatbevitel forrásból: {datas_str}\", name=\"TC7\")\n        allure.attach(\n>           f\"Második adatbevitel forrásból: Title: {title2}, About: {about2}, Article: {article2}, Tag: {tag2}\",\n            name=\"TC7\")\nE       NameError: name 'title2' is not defined\n\nTest/test_cases.py:222: NameError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681639811719,"stop":1681639812764,"duration":1045},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"NameError: name 'title2' is not defined","statusTrace":"self = <test_cases.TestConduit object at 0x7fcf48519420>\n\n    def test_import_datas_from_csv(self):\n        self.login()\n    \n        datas_file = 'datas.csv'\n        datas_path = os.path.join(os.path.dirname(__file__), datas_file)\n    \n        datas_list = []\n        with open(datas_path, 'r') as file:\n            reader = csv.reader(file)\n            next(reader)\n            for row in reader:\n                title, about, article, tag = row\n                datas_list.append((title, about, article, tag))\n                time.sleep(2)\n                new_article_button = self.browser.find_element(By.XPATH, '//a[@href=\"#/editor\"]')\n                new_article_button.click()\n    \n                WebDriverWait(self.browser, 10).until(\n                    EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Article Title\"]'))\n                )\n    \n                title_input = self.browser.find_element(By.XPATH, '//input[@placeholder=\"Article Title\"]')\n                title_input.send_keys(title)\n    \n                about_input = self.browser.find_element(By.XPATH, '//input[@placeholder=\"What\\'s this article about?\"]')\n                about_input.send_keys(about)\n    \n                article_input = self.browser.find_element(By.XPATH,\n                                                          '//textarea[@placeholder=\"Write your article (in markdown)\"]')\n                article_input.send_keys(article)\n    \n                tag_input = self.browser.find_element(By.XPATH, '//input[@placeholder=\"Enter tags\"]')\n                tag_input.send_keys(tag)\n                tag_input.send_keys(Keys.RETURN)\n    \n                publish_button = self.browser.find_element(By.XPATH, '//button[contains(text(), \"Publish Article\")]')\n                publish_button.click()\n    \n                article_title = WebDriverWait(self.browser, 10).until(\n                    EC.presence_of_element_located((By.XPATH, '//h1'))\n                )\n    \n                assert article_title.text == title\n    \n        datas_str = \"\\n\".join(\n            [f\"Title: {title}, About: {about}, Article: {article}, Tag: {tag}\" for (title, about, article, tag) in\n             datas_list])\n    \n        allure.attach(f\"\\nElső adatbevitel forrásból: {datas_str}\", name=\"TC7\")\n        allure.attach(\n>           f\"Második adatbevitel forrásból: Title: {title2}, About: {about2}, Article: {article2}, Tag: {tag2}\",\n            name=\"TC7\")\nE       NameError: name 'title2' is not defined\n\nTest/test_cases.py:222: NameError","steps":[],"attachments":[{"uid":"bf45503a30b34e1b","name":"TC7","source":"bf45503a30b34e1b.attach","type":"text/plain","size":467}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681639824661,"stop":1681639824716,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Test"},{"name":"suite","value":"test_cases"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az280-397"},{"name":"thread","value":"3189-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Test.test_cases"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"bb6c608d43f611a9.json","parameterValues":[]}